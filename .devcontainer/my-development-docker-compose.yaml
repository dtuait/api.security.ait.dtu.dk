
# development command - the only differnce is command in xx-api-security-ait-dtu-dk-app-main is commented out
# docker compose -p dev-api-security-ait-dtu-dk -f ./my-development-docker-compose.yaml up -d
# production command
# docker compose -p prod-api-security-ait-dtu-dk -f ./my-production-docker-compose.yaml up -d

services:
  xx-api-security-ait-dtu-dk-app-main:
    image: dtuait/api-security-ait-dtu-dk-app-main:python-3.12-bookworm-django-5.1.1-postgres-16-29-09-2025
    # build:
    #   context: .
    #   dockerfile: Dockerfile

    # development command
    command: sleep infinity
    # production command
    # command: 'bash -c "cd /app/app-main && gunicorn app.wsgi:application --bind 0.0.0.0:8121"'


    restart: always
    tty: true
    volumes:
      - ..:/app
      - ../shared-project-data:/mnt/shared-project-data
      # - ./entrypoint.sh:/entrypoint.sh # you dont need to mount it since it is already in the image
    networks:
      - shared_network


  xx-api-security-ait-dtu-dk-postgres-service:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - beta-api-security-ait-dtu-dk-postgres-service-volume:/var/lib/postgresql/data
      # If you have Postgres init scripts, mount them here
      # - ../postgres-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - shared_network

  xx-api-security-ait-dtu-dk-pgadmin-service:
      image: dpage/pgadmin4:8.11
      restart: always
      ports:
        - "5010:80"
      environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      networks:
        - shared_network

networks:
  shared_network:
    external: true

volumes:
  beta-api-security-ait-dtu-dk-postgres-service-volume:
    driver: local
