Ngrok tunnel with VS Code MSAL debug

1. Authenticate Ngrok once (already done in this workspace) with: `ngrok config add-authtoken <your-token>`.
2. When you launch Django via the VS Code configuration `ServerLive: production_settings`, it now triggers the task `ngrok: ensure tunnel` before the debugger starts. That task makes sure an Ngrok tunnel is running for `https://indifferently-piscine-anson.ngrok-free.dev` and leaves a log in `/tmp/ngrok.log`.
3. With the tunnel up, Django runs on `0.0.0.0:8121` using `.env` plus MSAL overrides that target the Ngrok domain. Browse to `https://indifferently-piscine-anson.ngrok-free.dev` to complete MSAL sign-in flows against the Azure AD registration.
4. To stop the tunnel after debugging, run the VS Code task `ngrok: stop tunnel` (Command Palette → “Run Task…”).
5. Prefer starting the debugger again? The pre-launch task detects the existing tunnel and reuses it, so repeat runs stay fast.

Manual fallback: if you want to manage Ngrok yourself, open a new terminal and run `ngrok http --domain=indifferently-piscine-anson.ngrok-free.dev http://localhost:8121`, then terminate it with `Ctrl+C` when done.

Tips: keep an eye on the dedicated task terminal for tunnel logs, and restart Ngrok only if you change ports or need a fresh session.
